using Xacc.Languages.CSLex;
using Xacc.ComponentModel;
using System.Drawing;
using LexerBase = Xacc.Languages.CSLex.Language<Xacc.Languages.CSLex.Yytoken>.LexerBase;
namespace Xacc.Languages
{
  sealed class PowerShellLang : CSLex.Language<CSLex.Yytoken>
  {
	  public override string Name {get {return "PowerShell"; } }
	  public override string[] Extensions {get { return new string[]{"ps1","msh"}; } }
	  LexerBase lexer = new PowerShellLexer();
	  protected override LexerBase Lexer
	  {
		  get {return lexer;}
	  }
  }
}
//NOTE: comments are not allowed except in code blocks


sealed class PowerShellLexer : LexerBase {

	public PowerShellLexer () {
	YY_BOL = 65536;
	YY_EOF = 65537;

	}

	const int VERBSTR = 1;
	const int YYINITIAL = 0;
	static readonly int[] yy_state_dtrans = {
		0, 		47
	};
	static readonly int[] yy_acpt = {
0,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
0,4,4,4,4,4,4,4,4,4,0,4,4,4,4,0,
4,4,4,0,4,4,4,0,4,4,4,0,4,4,0,4,
4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4	};
	static readonly int[] yy_cmap = unpackFromString(
1,65538,
"52:9,51,30,52:2,2,52:18,51,32,1,50,46,37,33,29,40,32,36,35,32,28,38,37,6,43" +
",41,6:7,39,32,44,45,42,49,47,18,24,15,17,10,9,26,16,8,5,25,11,27,21,19,22,5" +
",20,12,14,7,5,13,5,23,5,32,4,32,52,48,3,18,24,15,17,10,9,26,16,8,5,25,11,27" +
",21,19,22,5,20,12,14,7,5,13,5,23,5,31,34,32,52:65410,0:2")[0];

	static readonly int[] yy_rmap = {
0,1,2,3,4,5,1,6,7,1,8,3,9,10,1,1,11,2,1,12,13,1,14,15,16,17,1,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,15,34,35,36,37,38,31,39,40,41,42,43,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87
,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105};

	static readonly int[,] yy_nxt = {
{1,2,-1,18,3,3,4,98,19,64,65,3,110,99,81,118,3,29,3,3,111,3,100,3,101,3,3,3,5,28,6,21,21,31,35,39,43,43,46,49,21,20,52,30,54,21,33,37,3,18,7,8,18},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,9,17,10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,21,-1,-1,3,-1,-1,-1,-1},
{-1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1},
{-1,23,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-1,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36},
{-1,-1,-1,-1,-1,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,-1,13,-1,13,-1,-1,-1,-1,13,-1,-1,-1,-1},
{-1,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,58,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,15,50,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-1,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,22,50},
{-1,14,44,24,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-1,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44},
{-1,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,59,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27},
{-1,-1,-1,-1,-1,3,3,3,3,3,112,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,32,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,13,13,-1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,13,26,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,82,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-1,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,15,50,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-1,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50},
{-1,-1,-1,-1,-1,3,3,3,3,3,25,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{1,15,50,16,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,6,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,22,41},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,40,-1,-1,-1,-1,-1,-1,-1,-1,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,116,102,3,3,3,3,3,3,3,3,3,3,34,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,66,3,3,3,3,3,3,3,3,3,38,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,42,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,45,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,48,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,51,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,53,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,55,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,57,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,83,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,60,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,55,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,61,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,62,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,63,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,55,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,51,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,67,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,93,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,68,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,69,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,70,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,71,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,72,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,73,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,74,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,75,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,76,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,74,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,77,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,78,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,79,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,80,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,84,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,85,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,86,3,113,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,87,3,3,3,3,3,3,3,3,3,88,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,89,3,3,3,3,3,3,3,3,3,105,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,90,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,91,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,92,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,94,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,95,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,96,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,97,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,103,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,104,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,106,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,107,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,108,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,109,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,114,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,115,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,117,3,3,3,3,3,3,3,3,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,3,-1,3,-1,-1,-1,-1,3,-1,-1,-1,-1}};

	public override IToken lex ()
 {
		int yy_lookahead;
		int yy_anchor = YY_NO_ANCHOR;
		int yy_state = yy_state_dtrans[yy_lexical_state];
		int yy_next_state = YY_NO_STATE;
		int yy_last_accept_state = YY_NO_STATE;
		bool yy_initial = true;
		int yy_this_accept;

		yy_mark_start();
		yy_this_accept = yy_acpt[yy_state];
		if (YY_NOT_ACCEPT != yy_this_accept) {
			yy_last_accept_state = yy_state;
			yy_mark_end();
		}
		while (true) {
			if (yy_initial && yy_at_bol) yy_lookahead = YY_BOL;
			else yy_lookahead = yy_advance();
			yy_next_state = YY_F;
			yy_next_state = yy_nxt[yy_rmap[yy_state],yy_cmap[yy_lookahead]];
			if (YY_EOF == yy_lookahead && true == yy_initial) {
				return Yytoken.EOF;
			}
			if (YY_F != yy_next_state) {
				yy_state = yy_next_state;
				yy_initial = false;
				yy_this_accept = yy_acpt[yy_state];
				if (YY_NOT_ACCEPT != yy_this_accept) {
					yy_last_accept_state = yy_state;
					yy_mark_end();
				}
			}
			else {
				if (YY_NO_STATE == yy_last_accept_state) {
					return Error();
				}
				else {
					yy_anchor = yy_acpt[yy_last_accept_state];
					if (0 != (YY_END & yy_anchor)) {
						yy_move_end();
					}
					yy_to_mark();
					switch (yy_last_accept_state) {
					case 8: case 22: 
      {;}
						break;
					case 4: case 20: case 30: 
                 {return Number();}
						break;
					case 10: case 24: 
                                                                                                                                                                                                                                        {ENTER(VERBSTR); return String(); }
						break;
					case 13: case 26: 
                                                    {return Other();}
						break;
					case 1: 

						break;
					case 16: 
                                                                                                                                                                                                                                    { return String(); }
						break;
					case 15: 
                                                                                                                                                                                                                                   {EXIT(); return String();}
						break;
					case 2: case 18: case 28: case 33: case 37: case 41: 
 {return Error(); }
						break;
					case 9: case 23: 
                                   {return String();}
						break;
					case 7: 
                    {return Comment();}
						break;
					case 5: case 21: case 31: case 35: case 39: case 43: case 46: case 49: 
					case 52: case 54: case 56: case 58: 
                                                                                                                                                                                                                                            {return Operator();}
						break;
					case 12: 
                                                                                                                                                                                                                                                                                                {return Type();}
						break;
					case 3: case 19: case 29: case 34: case 38: case 42: case 45: case 48: 
					case 51: case 53: case 55: case 57: case 59: case 60: case 61: case 62: 
					case 63: case 64: case 65: case 66: case 67: case 68: case 69: case 70: 
					case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: 
					case 79: case 80: case 81: case 83: case 84: case 85: case 86: case 87: 
					case 88: case 89: case 90: case 91: case 92: case 93: case 94: case 95: 
					case 96: case 97: case 98: case 99: case 100: case 101: case 102: case 103: 
					case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: 
					case 112: case 113: case 114: case 115: case 116: case 117: case 118: 
                                           {return Identifier();}
						break;
					case 11: case 25: case 82: 
                                                                                                                                                                                             {return Keyword();}
						break;
					case 14: 
                                                                                                                                                                                                                                       {return String();}
						break;
					case 6: 
  {return NewLine();}
						break;
					default:
						yy_error(YY_E_INTERNAL,false);break;
					}
					yy_initial = true;
					yy_state = yy_state_dtrans[yy_lexical_state];
					yy_next_state = YY_NO_STATE;
					yy_last_accept_state = YY_NO_STATE;
					yy_mark_start();
					yy_this_accept = yy_acpt[yy_state];
					if (YY_NOT_ACCEPT != yy_this_accept) {
						yy_last_accept_state = yy_state;
						yy_mark_end();
					}
				}
			}
		}
	}
}
